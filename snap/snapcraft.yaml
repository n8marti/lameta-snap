name: lameta-unofficial
title: laMETA
# version: "v2.0.19-beta"
version: "v2.1.2-alpha"
# base: core18 # highest available for nodejs/yarn plugin
base: core22 # for npm plugin
summary: Lameta is a metadata tool to help with organising collections of files.
description: |
  Lameta is mainly aimed at collections made in the course of documenting language, music, and other cultural expressions.

  Lameta greatly simplifies management of collections and makes the archiving process straightforward and painless for field workers. 

  Hatton, John, Gary Holton, Mandana Seyfeddinipur, Nick Thieberger. 2021. Lameta [software] https://github.com/onset/laMETA/releases
grade: devel
confinement: devmode
architectures:
  - amd64

apps:
  lameta-unofficial:
    extensions: [gnome]
    command: opt/lameta/lameta --no-sandbox
    plugs:
      - audio-playback
      - browser-support
      - home
      - network
      - removable-media
      - udisks2
      - wayland
      - x11

parts:
  lameta:
    source: https://github.com/onset/lameta/archive/refs/tags/${SNAPCRAFT_PROJECT_VERSION}.tar.gz
    plugin: dump
    build-packages:
      - curl
    build-snaps:
      - node/16/stable
    build-environment:
      - ARCH: "x64" # consider also "arm64"
      - NODE_ENV: "production"
      - NODEJS_FIXED_VERSION: "v16.20.0"
    override-build: |
      # Bugfix: https://forum.snapcraft.io/t/problems-with-remote-build/24373/2
      if [ -z ${http_proxy+x} ]; then
        echo "Not using proxy"
      else
        echo "Using proxy"
        export ELECTRON_GET_USE_PROXY=1
        export GLOBAL_AGENT_HTTP_PROXY="${http_proxy}"
        export GLOBAL_AGENT_HTTPS_PROXY="${http_proxy}"
        npm config set proxy $http_proxy
        npm config set https-proxy $https_proxy
        # yarn config set proxy $http_proxy # doesn't exist?
        # yarn config set https-proxy $https_proxy # doesn't exist?
      fi

      # Add logFilters to .yarnrc.yml.
      echo -e 'logFilters:\n  - code: "YN0013"\n    level: "discard"' >> .yarnrc.yml
      echo -e "httpProxy: \"$http_proxy\"" >> .yarnrc.yml
      echo -e "httpsProxy: \"$http_proxy\"" >> .yarnrc.yml

      # # Edit package.json to only build "dir" pkg for linux. (not needed if using "electron-builder --linux dir" below)
      # data=$(jq '.build.linux.target = ["dir"]' package.json)
      # echo -E "$data" > package.json

      # Install correct version of node.
      # curl -s https://nodejs.org/dist/"${NODEJS_FIXED_VERSION}"/node-"${NODEJS_FIXED_VERSION}"-linux-$ARCH.tar.gz \
      #   | tar xzf - -C "$SNAPCRAFT_PART_INSTALL" --strip-components=1

      # NOTE: Relying on build system memory limit instead of the following.
      # Limit memory use if system has limited RAM.
      # mem_tot=$(free -m | grep Mem | awk '{print $2}')
      # if [[ $(free -m | grep ^Mem | awk '{print $2}') -lt 1000 ]]; then
      #   export NODE_OPTIONS='--heapsnapshot-near-heap-limit=1 --max-old-space-size=200'
      # fi

      # Install yarn.
      npm install --location=global yarn

      # Install node packages.
      yarn install
      npm run build-without-test
      ./node_modules/.bin/electron-builder --linux dir

      # Copy over the linux-unpacked directory contents.
      mkdir -p $SNAPCRAFT_PART_INSTALL/opt/lameta
      cp -ar ./release/linux-unpacked/* $SNAPCRAFT_PART_INSTALL/opt/lameta/
