name: lameta-unofficial
title: laMETA
license: MIT
version: "v2.3.5-beta"  # matches release tag from source repo
base: core22
summary: Lameta is a metadata tool to help with organising collections of files.
description: |
  This is an UNOFFICIAL build of laMETA.

  Lameta is mainly aimed at collections made in the course of documenting language, music, and other cultural expressions.

  Lameta greatly simplifies management of collections and makes the archiving process straightforward and painless for field workers. 

  Hatton, John, Gary Holton, Mandana Seyfeddinipur, Nick Thieberger. 2021. Lameta [software] https://github.com/onset/laMETA/releases
contact: https://github.com/n8marti/lameta-snap/issues
issues: https://github.com/n8marti/lameta-snap/issues
source-code: https://github.com/onset/lameta/releases
grade: stable # devel
confinement: strict # devmode
icon: snap/gui/lameta-unofficial.png
compression: lzo
architectures:
  - amd64 # consider also "arm64", but included ffmpeg libs would need to be modified

apps:
  lameta-unofficial:
    extensions: [gnome]
    command: opt/lameta/lameta --no-sandbox --disable-seccomp-filter-sandbox
    plugs:
      - audio-playback
      # - browser-support
      # - dbus
      - desktop
      - desktop-legacy
      - home
      # - mount-observe
      - network
      - removable-media
      - shmem
      # - udisks2
      - wayland
      - x11

plugs:
  shmem:
    interface: shared-memory
    private: true

parts:
  lameta:
    source: https://github.com/onset/lameta/archive/refs/tags/${SNAPCRAFT_PROJECT_VERSION}.tar.gz
    plugin: dump
    build-packages:
      - curl
    # build-environment:
    #   - NODE_ENV: "production"
    override-build: |
      # Ref:
      # - https://forum.snapcraft.io/t/how-to-delegate-package-creation-in-snapcraft-yaml-to-electron-builder/28097/10
      # - https://github.com/kenvandine/element-desktop/blob/b0b8a5d3304ea56556262c38298333cec03c44b2/snap/snapcraft.yaml#L69

      # Install volta for managing node, npm, & yarn.
      # https://docs.volta.sh/guide/getting-started
      curl https://get.volta.sh | bash
      export VOLTA_HOME=$HOME/.volta
      export PATH=$VOLTA_HOME/bin:$PATH
      volta install node
      node --version
      volta install npm
      npm --version

      # Bugfix: https://forum.snapcraft.io/t/problems-with-remote-build/24373/2
      if [ -z ${http_proxy+x} ]; then
        echo "Not using proxy"
      else
        echo "Using proxy"
        export ELECTRON_GET_USE_PROXY=1
        export GLOBAL_AGENT_HTTP_PROXY="${http_proxy}"
        export GLOBAL_AGENT_HTTPS_PROXY="${http_proxy}"
        npm config set proxy $http_proxy
        npm config set https-proxy $https_proxy
      fi

      # Make changes to .yarnrc.yml.
      echo -e 'logFilters:\n  - code: "YN0013"\n    level: "discard"' >> .yarnrc.yml
      echo -e "httpProxy: \"$http_proxy\"" >> .yarnrc.yml
      echo -e "httpsProxy: \"$http_proxy\"" >> .yarnrc.yml

      # Install packages & build.
      volta install yarn
      yarn --version
      # yarn install --immutable
      yarn install --frozen-lockfile
      # Build app.
      npm run build
      ./node_modules/.bin/electron-builder --linux dir

      # Copy over the linux-unpacked directory contents.
      mkdir -p $SNAPCRAFT_PART_INSTALL/opt/lameta
      cp -ar ./release/linux-unpacked/* $SNAPCRAFT_PART_INSTALL/opt/lameta/
    stage-packages:
      - rsync
